syntax = "proto2";

import "TSPMessages.proto";
import "TSKArchives.proto";
package TSS;

enum ValueType {
  ObjectType = 0;
  IntType = 1;
  FloatType = 2;
  DoubleType = 3;
}
enum PropertyType {
  InvalidPropertyType = 1;
  NullPropertyType = 2;
  IntegerPropertyType = 3;
  FloatPropertyType = 4;
  DoublePropertyType = 5;
  NSStringPropertyType = 6;
  TSPObjectPropertyType = 7;
}
message StyleArchive {
  optional string name = 1;
  optional string style_identifier = 2;
  optional .TSP.Reference parent = 3;
  optional bool is_variation = 4 [default = false];
  optional .TSP.Reference stylesheet = 5;
}

message StylesheetArchive {
  message IdentifiedStyleEntry {
    required string identifier = 1;
    required .TSP.Reference style = 2;
  }

  message StyleChildrenEntry {
    required .TSP.Reference parent = 1;
    repeated .TSP.Reference children = 2;
  }

  message VersionedStyles {
    repeated .TSP.Reference styles = 1;
    repeated .TSS.StylesheetArchive.IdentifiedStyleEntry identifier_to_style_map = 2;
    repeated .TSS.StylesheetArchive.StyleChildrenEntry parent_to_children_style_map = 3;
  }

  repeated .TSP.Reference styles = 1;
  repeated .TSS.StylesheetArchive.IdentifiedStyleEntry identifier_to_style_map = 2;
  optional .TSP.Reference parent = 3;
  optional bool is_locked = 4 [default = true];
  repeated .TSS.StylesheetArchive.StyleChildrenEntry parent_to_children_style_map = 5;
  optional bool can_cull_styles = 6 [default = false];
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_10_0 = 7;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_10_1 = 8;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_10_2 = 9;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_11_0 = 10;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_11_1 = 11;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_11_2 = 12;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_12_0 = 13;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_12_1 = 14;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_12_2 = 15;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_13_0 = 16;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_13_1 = 17;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_13_2 = 18;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_14_0 = 19;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_14_1 = 20;
  optional .TSS.StylesheetArchive.VersionedStyles styles_for_14_2 = 21;
}

message ThemeArchive {
  optional .TSP.Reference legacy_stylesheet = 1;
  optional string theme_identifier = 3;
  optional .TSP.Reference document_stylesheet = 4;
  repeated .TSP.UUID old_uuids_for_preset_replacements = 5;
  repeated .TSP.UUID new_uuids_for_preset_replacements = 6;
  repeated .TSP.Color color_presets = 10;
  extensions 100 to 536870911;
}

message ApplyThemeCommandArchive {
  required .TSK.CommandArchive super = 1;
  repeated .TSP.Reference commands = 2;
  optional .TSP.Reference old_theme = 3;
  optional .TSP.Reference new_theme = 4;
}

message ApplyThemeChildCommandArchive {
  required .TSK.CommandArchive super = 1;
  optional .TSP.Reference parent = 2;
}

message StyleUpdatePropertyMapCommandArchive {
  required .TSK.CommandArchive super = 1;
  required .TSP.Reference current_style = 2;
  optional .TSP.Reference style_with_old_property_map = 3;
  optional .TSP.Reference style_with_new_property_map = 4;
  optional .TSP.Reference style_diff = 7;
  optional bool notify_for_style_clients = 6 [default = true];
}

message ThemeReplacePresetCommandArchive {
  required .TSK.CommandArchive super = 1;
  required .TSP.Reference preset = 3;
  optional .TSP.Reference oldPreset = 4;
  required uint32 index = 5;
}

message ThemeReplaceColorPresetCommandArchive {
  required .TSK.CommandArchive super = 1;
  required .TSP.Reference theme = 2;
  required .TSP.Color color = 3;
  required .TSP.Color old_color = 4;
  required uint32 index = 5;
}

message ThemeAddStylePresetCommandArchive {
  required .TSK.CommandArchive super = 1;
  required .TSP.Reference theme = 2;
  required .TSP.Reference preset = 3;
  required string preset_kind = 4;
  optional string identifier = 5;
  optional bool add_preset_to_stylesheet = 6;
}

message ThemeRemoveStylePresetCommandArchive {
  required .TSK.CommandArchive super = 1;
  required .TSP.Reference theme = 2;
  required .TSP.Reference preset = 3;
  required uint32 preset_index = 4;
  required string preset_kind = 5;
  optional string identifier = 6;
  optional .TSP.Reference replacement_preset = 7;
}

message ThemeMovePresetCommandArchive {
  required .TSK.CommandArchive super = 1;
  required .TSP.Reference theme = 2;
  required .TSP.UUID preset_id = 3;
  required uint32 new_index = 4;
  required uint32 old_index = 5;
}

message ThemeReplaceStylePresetAndDisconnectStylesCommandArchive {
  required .TSK.CommandArchive super = 1;
  required .TSP.Reference preset = 2;
  required .TSP.Reference replacement_preset = 3;
}

message CommandPropertyEntryArchive {
  required uint32 property = 1;
  required int32 type = 2;
  optional int32 integer_value = 3;
  optional float float_value = 4;
  optional double double_value = 5;
  optional string string_value = 6;
  optional .TSP.Reference tsp_reference = 7;
  extensions 8 to 2001;
}

message CommandPropertyMapArchive {
  repeated .TSS.CommandPropertyEntryArchive property_entries = 1;
}

extend .TSS.CommandPropertyEntryArchive {
  optional .TSP.Color color = 8;
}