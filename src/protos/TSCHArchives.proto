syntax = "proto2";

import "TSPMessages.proto";
import "TSKArchives.proto";
import "TSCKArchives.proto";
import "TSDArchives.proto";
import "TSSArchives.proto";
import "TSCHArchives_Common.proto";
import "TSCHArchives_GEN.proto";
import "TSCH3DArchives.proto";
import "TSCHPreUFFArchives.proto";
package TSCH;

message ChartDrawableArchive {
  optional .TSD.DrawableArchive super = 1;
  extensions 10000 to 536870911;
}

message ChartArchive {
  optional .TSCH.ChartType chart_type = 1;
  optional .TSCH.ScatterFormat scatter_format = 2;
  optional .TSCH.RectArchive legend_frame = 3;
  optional .TSP.Reference preset = 4;
  optional .TSCH.SeriesDirection series_direction = 5;
  optional bool contains_default_data = 6;
  optional .TSCH.ChartGridArchive grid = 7;
  optional .TSP.Reference mediator = 8;
  optional .TSP.Reference chart_style = 9;
  optional .TSP.Reference chart_non_style = 10;
  optional .TSP.Reference legend_style = 11;
  optional .TSP.Reference legend_non_style = 12;
  repeated .TSP.Reference value_axis_styles = 13;
  repeated .TSP.Reference value_axis_nonstyles = 14;
  repeated .TSP.Reference category_axis_styles = 15;
  repeated .TSP.Reference category_axis_nonstyles = 16;
  repeated .TSP.Reference series_theme_styles = 17;
  optional .TSP.SparseReferenceArray series_private_styles = 18;
  optional .TSP.SparseReferenceArray series_non_styles = 19;
  repeated .TSP.Reference paragraph_styles = 20;
  optional uint32 multidataset_index = 21;
  optional bool needs_calc_engine_deferred_import_action = 22;
  optional .TSP.Reference owned_preset = 23;
  optional bool is_dirty = 24;
  extensions 10000 to 536870911;
  extend .TSCH.ChartDrawableArchive {
    optional .TSCH.ChartArchive unity = 10000;
  }
}

message ChartMultiDataIndexUpgrade {
  extend .TSCH.ChartArchive {
    optional bool upgraded_to_ui_state = 10021;
  }
}

message ChartGarlicMinMaxUpgrade {
  optional double horizontal_min = 1;
  optional double horizontal_max = 2;
  optional double value_min = 3;
  optional double value_max = 4;
  extend .TSCH.ChartArchive {
    optional .TSCH.ChartGarlicMinMaxUpgrade garlic_min_max_upgrade = 10010;
  }
}

message ChartGarlicLabelFormatUpgrade {
  optional string value_prefix = 1;
  optional string value_suffix = 2;
  optional bool value_use_separator = 3;
  optional string horizontal_prefix = 4;
  optional string horizontal_suffix = 5;
  optional bool horizontal_use_separator = 6;
  extend .TSCH.ChartArchive {
    optional .TSCH.ChartGarlicLabelFormatUpgrade garlic_label_format_upgrade = 10011;
  }
}

message ChartPasteboardAdditionsArchive {
  extend .TSCH.ChartArchive {
    optional uint32 preset_index_for_pasteboard = 10000;
    optional bytes preset_uuid_for_pasteboard = 10001;
    optional .TSP.Reference custom_format_list_for_pasteboard = 10003;
  }
}

message ChartPreserveAppearanceForPresetArchive {
  extend .TSCH.ChartArchive {
    optional bool appearance_preserved_for_preset = 10023;
  }
}

message ChartSupportsProportionalBendedCalloutLinesArchive {
  extend .TSCH.ChartArchive {
    optional bool supports_proportional_bended_callout_lines = 10024;
  }
}

message ChartSupportsRoundedCornersArchive {
  extend .TSCH.ChartArchive {
    optional bool deprecated_supports_rounded_corners = 10025;
    optional bool supports_rounded_corners = 10026;
  }
}

message ChartSupportsSeriesPropertySpacingArchive {
  extend .TSCH.ChartArchive {
    optional bool supports_series_value_label_spacing = 10027;
    optional bool supports_series_error_bar_spacing = 10028;
  }
}

message ChartSupportsStackedSummaryLabelsArchive {
  extend .TSCH.ChartArchive {
    optional bool supports_stacked_summary_labels = 10029;
  }
}

message ChartGridArchive {
  message ChartGridRowColumnIdMap {
    message Entry {
      required string uniqueId = 1;
      required uint32 index = 2;
    }

    repeated .TSCH.ChartGridArchive.ChartGridRowColumnIdMap.Entry row_id_map = 1;
    repeated .TSCH.ChartGridArchive.ChartGridRowColumnIdMap.Entry column_id_map = 2;
  }

  repeated string row_name = 1;
  repeated string column_name = 2;
  repeated .TSCH.GridRow grid_row = 3;
  optional .TSCH.ChartGridArchive.ChartGridRowColumnIdMap idMap = 4;
}

message ChartMediatorArchive {
  optional .TSP.Reference info = 1;
  repeated uint32 local_series_indexes = 2;
  repeated uint32 remote_series_indexes = 3;
}

message ChartFillSetArchive {
  required string identifier = 1;
  required string lookup_string = 2;
  optional uint32 number_of_theme_series_styles = 3;
  repeated .TSP.Reference series_styles = 4;
}

message ChartStylePreset {
  optional .TSP.Reference chart_style = 1;
  optional .TSP.Reference legend_style = 2;
  repeated .TSP.Reference value_axis_styles = 3;
  repeated .TSP.Reference category_axis_styles = 4;
  repeated .TSP.Reference series_styles = 5;
  repeated .TSP.Reference paragraph_styles = 6;
  optional bytes uuid = 7;
  extensions 10000 to 536870911;
}

message ChartPresetsArchive {
  repeated .TSP.Reference chart_presets = 1;
  extend .TSS.ThemeArchive {
    optional .TSCH.ChartPresetsArchive extension = 120;
  }
}

message PropertyValueStorageContainerArchive {
  optional .TSP.Reference chart_style = 1;
  optional .TSP.Reference chart_nonstyle = 2;
  optional .TSP.Reference legend_style = 3;
  optional .TSP.Reference legend_nonstyle = 4;
  optional .TSP.SparseReferenceArray value_axis_styles = 5;
  optional .TSP.SparseReferenceArray value_axis_nonstyles = 6;
  optional .TSP.SparseReferenceArray category_axis_styles = 7;
  optional .TSP.SparseReferenceArray category_axis_nonstyles = 8;
  optional .TSP.SparseReferenceArray series_theme_styles = 9;
  optional .TSP.SparseReferenceArray series_private_styles = 10;
  optional .TSP.SparseReferenceArray series_nonstyles = 11;
  optional .TSP.SparseReferenceArray paragraph_styles = 12;
  extensions 10000 to 536870911;
}

message StylePasteboardDataArchive {
  optional .TSS.StyleArchive super = 1;
  optional .TSCH.PropertyValueStorageContainerArchive style_network = 2;
  optional bool copied_from_entire_chart = 3;
}

message ChartSelectionPathTypeArchive {
  optional string path_type = 1;
  optional string path_name = 2;
}

message ChartAxisIDArchive {
  optional .TSCH.AxisType axis_type = 1;
  optional uint32 ordinal = 2;
}

message ChartSelectionPathArgumentArchive {
  optional uint32 number = 1;
  optional .TSCH.ChartAxisIDArchive axis_id = 2;
}

message ChartSelectionPathArchive {
  optional .TSCH.ChartSelectionPathTypeArchive path_type = 1;
  optional .TSCH.ChartSelectionPathArchive sub_selection = 2;
  repeated .TSCH.ChartSelectionPathArgumentArchive arguments = 3;
}

message ChartSelectionArchive {
  optional .TSD.DrawableSelectionArchive super = 3;
  optional .TSP.Reference chart = 1;
  repeated .TSCH.ChartSelectionPathArchive paths = 2;
}

message ChartCDESelectionArchive {
  optional .TSP.Reference chart = 1;
  optional int32 selection_type = 2;
  optional uint32 row_location = 3;
  optional uint32 row_length = 4;
  optional uint32 column_location = 5;
  optional uint32 column_length = 6;
}

message ChartUIState {
  optional .TSP.Reference chart = 1;
  optional int32 cde_last_row_selected = 2;
  optional int32 cde_last_col_selected = 3;
  optional int32 cde_last_row_count = 4;
  optional int32 cde_last_col_count = 5;
  optional bool cde_use_full_keyboard = 6;
  optional int32 multi_data_set_index = 7;
  optional bool is_valid_multi_data_set_index = 8;
  extensions 10000 to 536870911;
}

message ChartUIStateMultiDataIndexUpgrade {
  extend .TSCH.ChartUIState {
    optional bool upgraded_from_model = 10022;
  }
}

message ChartFormatStructExtensions {
  extend .TSK.FormatStructArchive {
    optional string prefix = 10000;
    optional string suffix = 10001;
  }
}

message ChartReferenceLineNonStyleItem {
  required .TSP.Reference non_style = 1;
  required .TSP.UUID uuid = 2;
}

message ChartAxisReferenceLineNonStylesArchive {
  required .TSCH.ChartAxisIDArchive axis_id = 1;
  repeated .TSCH.ChartReferenceLineNonStyleItem reference_line_non_style_items = 2;
}

message ChartAxisReferenceLineStylesArchive {
  required .TSCH.ChartAxisIDArchive axis_id = 1;
  optional .TSP.SparseReferenceArray reference_line_styles = 2;
}

message ChartReferenceLinesArchive {
  repeated .TSCH.ChartAxisReferenceLineNonStylesArchive reference_line_non_styles_map = 1;
  repeated .TSCH.ChartAxisReferenceLineStylesArchive reference_line_styles_map = 2;
  optional .TSP.Reference theme_preset_reference_line_style = 3;
}

message ChartPresetReferenceLineStylesArchive {
  repeated .TSP.Reference reference_line_styles = 1;
}

message ChartAxisReferenceLineSparseNonStylesArchive {
  required .TSCH.ChartAxisIDArchive axis_id = 1;
  repeated .TSCH.ChartReferenceLineNonStyleItem reference_line_non_style_items = 2;
}

message PropertyValueStorageContainerReferenceLinesArchive {
  repeated .TSCH.ChartAxisReferenceLineSparseNonStylesArchive reference_line_non_styles_map = 1;
  repeated .TSCH.ChartAxisReferenceLineStylesArchive reference_line_styles_map = 2;
  optional .TSP.Reference theme_preset_reference_line_style = 3;
}

message CollaboratorCDECursorSubselectionArchive {
  optional int32 row_location = 1;
  optional int32 row_length = 2;
  optional int32 column_location = 3;
  optional int32 column_length = 4;
  extend .TSCK.CollaboratorCursorArchive {
    optional .TSCH.CollaboratorCDECursorSubselectionArchive cde_cursor_subselection = 300;
  }
}

message CollaboratorChartTitleCursorSubselectionArchive {
  optional bool chart_title_selected = 1;
  extend .TSCK.CollaboratorCursorArchive {
    optional .TSCH.CollaboratorChartTitleCursorSubselectionArchive chart_title_cursor_subselection = 301;
  }
}

message CachedAxisDataFormatterPersistableStyleObject {
  optional .TSCH.ChartAxisIDArchive axis_id = 1;
  optional .TSK.FormatStructArchive style_object = 2;
}

message CachedSeriesDataFormatterPersistableStyleObject {
  optional int32 series_index = 1;
  optional .TSK.FormatStructArchive style_object = 2;
}

message CachedDataFormatterPersistableStyleObjects {
  repeated .TSCH.CachedAxisDataFormatterPersistableStyleObject axis_data_formatter_list = 1;
  repeated .TSCH.CachedSeriesDataFormatterPersistableStyleObject series_data_formatter_list = 2;
  optional .TSK.FormatStructArchive summary_label_style_object = 3;
  extend .TSCH.ChartArchive {
    optional .TSCH.CachedDataFormatterPersistableStyleObjects cached_data_formatter_persistable_style_objects = 10030;
  }
}

extend .TSCH.ChartArchive {
  optional bool scene3d_settings_constant_depth = 10002;
  optional string last_applied_fill_set_lookup_string = 10004;
  optional .TSCH.ChartReferenceLinesArchive reference_lines = 10005;
}
extend .TSCH.ChartStyleArchive {
  optional bool chart_supports_series_summary_labels = 10001;
}
extend .TSCH.ChartSeriesStyleArchive {
  optional bool series_supports_donut = 10001;
  optional bool series_supports_radar = 10002;
}
extend .TSCH.ChartSeriesNonStyleArchive {
  optional bool series_supports_custom_number_format = 10001;
  optional bool series_supports_custom_date_format = 10002;
  optional bool series_supports_callout_lines = 10003;
}
extend .TSCH.ChartAxisStyleArchive {
  optional bool axis_supports_radar = 10001;
}
extend .TSCH.ChartAxisNonStyleArchive {
  optional bool axis_supports_custom_number_format = 10001;
  optional bool axis_supports_custom_date_format = 10002;
}
extend .TSCH.ChartStylePreset {
  optional .TSCH.ChartPresetReferenceLineStylesArchive preset_reference_line_styles = 10000;
}
extend .TSCH.PropertyValueStorageContainerArchive {
  optional .TSCH.PropertyValueStorageContainerReferenceLinesArchive property_value_storage_container_reference_lines = 10000;
}